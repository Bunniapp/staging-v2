"use strict";(self.webpackChunkinterface=self.webpackChunkinterface||[]).push([[514],{37514:(I,g,e)=>{e.r(g),e.d(g,{ccipRequest:()=>x,offchainLookup:()=>P,offchainLookupAbiItem:()=>k,offchainLookupSignature:()=>A});var L=e(15861),E=e(3040),v=e(30038),d=e(1141),O=e(79767);class G extends d.G{constructor({callbackSelector:s,cause:t,data:c,extraData:i,sender:f,urls:n}){super(t.shortMessage||"An error occurred while fetching for an offchain result.",{cause:t,metaMessages:[...t.metaMessages||[],t.metaMessages?.length?"":[],"Offchain Gateway Call:",n&&["  Gateway URL(s):",...n.map(u=>`    ${(0,O.G)(u)}`)],`  Sender: ${f}`,`  Data: ${c}`,`  Callback selector: ${s}`,`  Extra data: ${i}`].flat(),name:"OffchainLookupError"})}}class M extends d.G{constructor({result:s,url:t}){super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:[`Gateway URL: ${(0,O.G)(t)}`,`Response: ${(0,v.P)(s)}`],name:"OffchainLookupResponseMalformedError"})}}class S extends d.G{constructor({sender:s,to:t}){super("Reverted sender address does not match target contract address (`to`).",{metaMessages:[`Contract address: ${t}`,`OffchainLookup sender address: ${s}`],name:"OffchainLookupSenderMismatchError"})}}var R=e(23979),$=e(41936),T=e(62910),b=e(9007),C=e(80770),w=e(37812);const A="0x556f1830",k={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};function P(r,s){return l.apply(this,arguments)}function l(){return(l=(0,L.Z)(function*(r,{blockNumber:s,blockTag:t,data:c,to:i}){const{args:f}=(0,$.p)({data:c,abi:[k]}),[n,u,h,a,o]=f,{ccipRead:y}=r,D=y&&"function"==typeof y?.request?y.request:x;try{if(!(0,b.E)(i,n))throw new S({sender:n,to:i});const m=yield D({data:h,sender:n,urls:u}),{data:j}=yield(0,E.R)(r,{blockNumber:s,blockTag:t,data:(0,C.zo)([a,(0,T.E)([{type:"bytes"},{type:"bytes"}],[m,o])]),to:i});return j}catch(m){throw new G({callbackSelector:a,cause:m,data:c,extraData:o,sender:n,urls:u})}})).apply(this,arguments)}function x(r){return p.apply(this,arguments)}function p(){return(p=(0,L.Z)(function*({data:r,sender:s,urls:t}){let c=new Error("An unknown error occurred.");for(let i=0;i<t.length;i++){const f=t[i],n=f.includes("{data}")?"GET":"POST",u="POST"===n?{data:r,sender:s}:void 0,h="POST"===n?{"Content-Type":"application/json"}:{};try{const a=yield fetch(f.replace("{sender}",s).replace("{data}",r),{body:JSON.stringify(u),headers:h,method:n});let o;if(o=a.headers.get("Content-Type")?.startsWith("application/json")?(yield a.json()).data:yield a.text(),!a.ok){c=new R.Gg({body:u,details:o?.error?(0,v.P)(o.error):a.statusText,headers:a.headers,status:a.status,url:f});continue}if(!(0,w.v)(o)){c=new M({result:o,url:f});continue}return o}catch(a){c=new R.Gg({body:u,details:a.message,url:f})}}throw c})).apply(this,arguments)}}}]);